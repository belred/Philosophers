<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACBAIoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6pooooAKKKKACiuR8d/ELQPBduW1a6DXRHyWsPzSt+Hb8fwzX
        zP4+/aF8QasXi0MrpdoSQPKbMjD3ft+H4iqUW9RX7H1vqms6ZpMe/U7+1tF7GaVUz+ZriNS+NHgTT5DH
        Lr0DuO0aO364x+tfCOqa7quqTSzXU000r/MzOxckepzx+lY6+bMf9YBz3bH6Ue6g1PvFv2gPAgb/AJCL
        keuwf/FVoaf8bfAt6wWPWgjH+/C2PzAr4E+wuFJeWJV9S36VG1nIpXa0bk8DZID3x60rxDU/S/RvFOia
        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
</value>
  </data>
</root>